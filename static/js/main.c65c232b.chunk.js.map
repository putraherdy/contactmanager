{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c65c232b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\n//import Contact from './components/contacts/Contact';\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact)\r\n            }\r\n            default: \r\n                return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state, action))\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n\r\n        this.setState({contacts: res.data});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n            {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport axios from 'axios';\r\n\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n            dispatch({type: 'DELETE_CONTACT', payload: id});\r\n        } \r\n        catch(e) {\r\n            dispatch({type: 'DELETE_CONTACT', payload: id}); \r\n        }\r\n        \r\n\r\n        \r\n    };\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                    <div className=\"card card-body mb-3\">\r\n                        <h4>{name} <i onClick={ () => this.setState({showContactInfo: !this.state.showContactInfo})} className=\"fas fa-sort-down\"\r\n                        style={{cursor: 'pointer'}}\r\n                        />\r\n                        <i className=\"fas fa-times\" style= {{cursor: 'pointer', float: 'right', color: 'red'}}\r\n                            onClick={this.onDeleteClick.bind(this, id, dispatch)}/>\r\n\r\n                        <Link to={`contact/edit/${id}`}>\r\n                            <i \r\n                                className=\"fas fa-pencil-alt\"\r\n                                style={{\r\n                                    cursor: 'pointer',\r\n                                    float: 'right',\r\n                                    color: 'black',\r\n                                    marginRight: '1rem'\r\n                                }}\r\n                            ></i>\r\n                        </Link>\r\n                        \r\n                        </h4>\r\n                        {showContactInfo ? (\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Email: {email}</li>\r\n                                <li className=\"list-group-item\">Phone: {phone}</li>\r\n                            </ul>) : null\r\n                        }   \r\n                    </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    \r\n    render() {\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\"> \r\n                                <span className=\"text-danger\">Contact</span> List\r\n                            </h1>\r\n\r\n\r\n                            {contacts.map(contact => (\r\n                                <Contact \r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                    \r\n                                />    \r\n                            ))}  \r\n                        </React.Fragment>    \r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    label: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n    \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n\r\n        dispatch({type: 'ADD_CONTACT', payload: res.data})\r\n\r\n        \r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        \r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Add Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label= \"Name\"\r\n                                        name= \"name\"\r\n                                        placeholder= \"Enter Name\"\r\n                                        value= {name}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.name}\r\n\r\n                                    />\r\n\r\n                                    <TextInputGroup \r\n                                        label= \"Email\"\r\n                                        name= \"email\"\r\n                                        type= \"email\"\r\n                                        placeholder= \"Enter Email\"\r\n                                        value= {email}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.email}\r\n\r\n                                    />\r\n\r\n                                    <TextInputGroup \r\n                                        label= \"Phone\"\r\n                                        name= \"phone\"\r\n                                        placeholder= \"Enter Phone\"\r\n                                        value= {phone}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.phone}\r\n\r\n                                    />\r\n\r\n                                    <input \r\n                                    type=\"submit\" \r\n                                    value=\"Add Contact\" \r\n                                    className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact; \r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n    \r\n        const {name, email, phone} = this.state;\r\n\r\n        //Check for errors\r\n        if(name === '') {\r\n            this.setState({errors: { name: 'Name is required'}});\r\n            return;\r\n        }\r\n\r\n        if(email === '') {\r\n            this.setState({errors: { email: 'Email is required'}});\r\n            return;\r\n        }\r\n\r\n        if(phone === '') {\r\n            this.setState({errors: { phone: 'Phone is required'}});\r\n            return;\r\n        }\r\n\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n        \r\n        const { id } = this.props.match.params;\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\r\n\r\n        dispatch({type:'UPDATE_CONTACT', payload: res.data});\r\n\r\n        // Clear State\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n        \r\n    };\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">Edit Contact</div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup \r\n                                        label= \"Name\"\r\n                                        name= \"name\"\r\n                                        placeholder= \"Enter Name\"\r\n                                        value= {name}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.name}\r\n\r\n                                    />\r\n\r\n                                    <TextInputGroup \r\n                                        label= \"Email\"\r\n                                        name= \"email\"\r\n                                        type= \"email\"\r\n                                        placeholder= \"Enter Email\"\r\n                                        value= {email}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.email}\r\n\r\n                                    />\r\n\r\n                                    <TextInputGroup \r\n                                        label= \"Phone\"\r\n                                        name= \"phone\"\r\n                                        placeholder= \"Enter Phone\"\r\n                                        value= {phone}\r\n                                        onChange= {this.onChange}\r\n                                        error = {errors.phone}\r\n\r\n                                    />\r\n\r\n                                    <input \r\n                                    type=\"submit\" \r\n                                    value=\"Update Contact\" \r\n                                    className=\"btn btn-light btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact; \r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-brand\">\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/\" className=\"nav-link\">\r\n               <i className=\"fas fa-home\"></i> Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus\"></i> Add\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question\"></i> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  branding: \"My App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n          <h1 className=\"display-4\">About Contact Manager</h1>  \r\n          <p className=\"lead\">Simple app to manage contacts</p>\r\n          <p className=\"text-secondary\">Versin 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default () => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">\r\n                <span className=\"text-danger\">404</span> Page Not Found\r\n            </h1> \r\n            <p className=\"lead\">Sorry, that page does not exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n\r\n    state = {\r\n        title: '',\r\n        body: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n        .then(response => response.json())\r\n        .then(data => this.setState({\r\n            title: data.title,\r\n            body: data.body\r\n        }));\r\n    }\r\n\r\n\r\n    render() {\r\n        const {title, body} = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Test;\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\n\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\n\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n  <Provider>\n    <Router>\n      <div className=\"App\">\n        <Header branding=\"Contact Manager\"/>\n        <div className=\"container\">\n          <Switch>\n              <Route \n                exact path=\"/\" \n                component = {Contacts} \n              />\n              <Route \n                exact path=\"/contact/add\" \n                component = {AddContact} \n              />\n              <Route \n                exact path=\"/contact/edit/:id\" \n                component = {EditContact} \n              />\n              <Route \n                exact path=\"/about\" \n                component = {About} \n              />\n\n              <Route \n                exact path=\"/test\" \n                component = {Test} \n              />\n\n              <Route component={NotFound} />\n              \n          </Switch>\n        </div>\n      </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}